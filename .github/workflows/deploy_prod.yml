name: Deploy to PROD

on:
  push:
    branches: [master]

jobs:
  deploy:
    name: Deploy to Cloudflare Workers PRODUCTION
    runs-on: ubuntu-latest

    steps:
      - name: ‚è≥ Cloning repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          show-progress: false

      - name: üì¶ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: ‚¨¢ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "pnpm"

      - name: üì• Install dependencies
        run: pnpm install

      - name: üöÄ Setup Turbo Cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: üì• Build
        run: pnpm build:packages

      - name: üì•Ô∏è Deploy Backend
        working-directory: ./apps/api
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          npx wrangler deploy \
            --env=production \
            --minify \
            --config wrangler.toml ||
            (echo "Deployment failed. Checking Wrangler version and permissions..." && exit 1)

      - name: üèóÔ∏è Build Web App
        working-directory: ./apps/web
        run: pnpm run build

      - name: üåê Deploy Web App to Cloudflare
        working-directory: ./apps/web
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          npx opennextjs-cloudflare build && \
          npx opennextjs-cloudflare deploy --skip-cache-populate
